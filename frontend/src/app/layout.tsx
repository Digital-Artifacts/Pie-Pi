'use client'

import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import './globals.css'

import {
  ModalProvider,
} from '@particle-network/connect-react-ui';
import {
  AvalancheTestnet, EthereumHolesky, EthereumSepolia, ArbitrumSepolia, PolygonMumbai
} from '@particle-network/chains';
import { WalletEntryPosition } from '@particle-network/auth';
import '@particle-network/connect-react-ui/esm/index.css';
import { evmWallets } from '@particle-network/connect';
import { ApolloProvider } from "@apollo/client";
import { LivepeerConfig } from "@livepeer/react";

import LivepeerClient from '@/clients/livepeer';
import ApolloClient from '@/clients/apollo'; 


const inter = Inter({ subsets: ['latin'] })

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }


const options = {
  projectId: 'a148efd9-c501-4e74-a09b-3d3df1e52c23',
  clientKey: 'cfWucVhHId17CfNma5bPZquCYih342jcFNDAY76m',
  appId: '527375f3-46fb-469e-bb98-828126e23873',
  chains: [AvalancheTestnet, PolygonMumbai, EthereumSepolia, EthereumHolesky, ArbitrumSepolia],

  particleWalletEntry: {
    displayWalletEntry: true,
    defaultWalletEntryPosition: WalletEntryPosition.BR,
    supportChains:[AvalancheTestnet, PolygonMumbai, EthereumSepolia, EthereumHolesky, ArbitrumSepolia],
  },
  wallets: evmWallets({ 
    projectId: 'bcfa9e3c9133f44179fcf54cfea2ad88', //replace with walletconnect projectId
    showQrModal: false
 }),


};

const particleAuthSort = ['email', 'phone', 'google'];

const walletSort= ['ParticleAuth', 'Wallet'];

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
    <body>
    
    
    <ModalProvider particleAuthSort={particleAuthSort} options={options} walletSort={walletSort}>
    <LivepeerConfig client={LivepeerClient}>
    <ApolloProvider client={ApolloClient}> 
      <main>{children}</main>
    </ApolloProvider>
    </LivepeerConfig>
    </ModalProvider>
    
    </body>
  </html>
  )
}
